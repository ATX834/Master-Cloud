{% block footer %}

{% set videoid = 'ETEg-SB01QY' %}
<div data-id="{{ videoid }}" id="videoid"></div>

    <footer>

			<div class="d-none" id="video-placeholder"></div>
			<div class='media-controls p-4 pb-0'>
			<div class='media-progress'>
				<input type="range" id="progress-bar" class='mediaplayer-bar' value="0">
				<p><span id="current-time">0:00</span> / <span id="duration">0:00</span></p>
			</div>
			<div class='media-buttons row'>
			<div class='col-1 col-lg-2' style="display: block; margin: auto;">
				<input id="volume-input" type="range" max="100" min="0">
			</div>

			<div class="col-1 offset-1 offset-lg-2">
				<button id="prev" class='back-button media-button' label='back'>
				<i class='fas fa-step-backward button-icons'></i>
				</button>
			</div>

			<div class="col-1 offset-1">
				<div class="box">
				</div>
			</div>
			<div class="col-1 offset-1">
				<button class='skip-button media-button' label='skip'>
				<i id="next" class='fas fa-step-forward button-icons'></i>
				</button>
			</div>

			<div class="offset-4"></div>


				
				
			
			</div>
			</div>

</footer>


{% endblock %}


{% block javascript %}
<script>
//Initialisation API + définition du player
// Avec musique

var tag = document.createElement('script');

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// Récupère l'id du lien youtube
// var. pas encore au point car on passe par l'id d'une div pour récupérer 
// l'id du lien YT. A voir quand il y aura connexion vers BDD

var lienVersYT = document.querySelector('#videoid').dataset.id;

//Player avec les fonctionnalités

var player,
    time_update_interval = 0;

function onYouTubeIframeAPIReady() {
    player = new YT.Player('video-placeholder', {
        width: 600,
        height: 400,
        videoId: lienVersYT,
        playerVars: {
        },
        events: {
            onReady: initialize,
			onStateChange: function(event){
				//permet de récupérer l'état du player
    }
        }
    });

}
</script>
<script src="/assets/js/script.js"></script>
{% endblock %}